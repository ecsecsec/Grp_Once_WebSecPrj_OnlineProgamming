import React, { useEffect, useState } from "react";
import "./AdminScreen.css"; // üëâ d√πng CSS ri√™ng n·∫øu c·∫ßn

/**
 * Trang: Qu·∫£n l√Ω ng∆∞·ªùi d√πng
 * - Hi·ªÉn th·ªã danh s√°ch t·∫•t c·∫£ users
 * - M·ªói user 1 d√≤ng
 * - Kh√¥ng hi·ªÉn th·ªã password, timestamps
 */
function AdminScreen() {
  const [users, setUsers] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // üß© D·ªØ li·ªáu m·∫´u (xo√° khi g·ªçi API th·ª±c)
  const sampleUsers = [
    {
      _id: "u1",
      name: "Nguy·ªÖn VƒÉn A",
      email: "a@example.com",
      role: "user",
    },
    {
      _id: "u2",
      name: "Tr·∫ßn Th·ªã B",
      email: "b@example.com",
      role: "creator",
    },
  ];

  useEffect(() => {
    // üëâ Thay b·∫±ng fetch th·ª±c t·∫ø: GET /api/users
    setUsers(sampleUsers);
    setLoading(false);
  }, []);

  const handleDelete = async (id) => {
    if (!window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën xo√° t√†i kho·∫£n n√†y kh√¥ng?")) return;
    try {
      // await fetch(`/api/users/${id}`, { method: "DELETE" });
      setUsers((prev) => prev.filter((u) => u._id !== id));
    } catch (err) {
      alert("L·ªói: " + err.message);
    }
  };

  const handleGrantCreator = async (id) => {
    try {
      // await fetch(`/api/users/${id}/role`, { method: "PUT", body: JSON.stringify({ role: "creator" }) });
      setUsers((prev) =>
        prev.map((u) => (u._id === id ? { ...u, role: "creator" } : u))
      );
    } catch (err) {
      alert("L·ªói: " + err.message);
    }
  };

  if (loading) return <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>;
  if (error) return <p>L·ªói: {error}</p>;

  return (
    <div>
      <h2>Qu·∫£n l√Ω ng∆∞·ªùi d√πng</h2>

      <table className="user-table">
        <thead>
          <tr>
            <th>T√™n</th>
            <th>Email</th>
            <th>Vai tr√≤</th>
            <th>H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {users.map((user) => (
            <tr key={user._id}>
              <td>{user.name}</td>
              <td>{user.email}</td>
              <td>{user.role}</td>
              <td>
                <div className="btn-actions">
                  <button
                    onClick={() => handleGrantCreator(user._id)}
                    disabled={user.role === "creator"}
                  >
                    {user.role === "creator" ? "ƒê√£ l√† Creator" : "C·∫•p quy·ªÅn Creator"}
                  </button>
                  <button
                    className="btn-delete"
                    onClick={() => handleDelete(user._id)}
                  >
                    X√≥a
                  </button>
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

export default AdminScreen;