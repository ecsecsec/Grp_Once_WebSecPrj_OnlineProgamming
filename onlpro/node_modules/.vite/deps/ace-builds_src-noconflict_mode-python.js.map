{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-python.js"],
  "sourcesContent": ["ace.define(\"ace/mode/python_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/*\r\n * TODO: python delimiters\r\n */\r\n\"use strict\";\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar PythonHighlightRules = function () {\r\n    var keywords = (\"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" +\r\n        \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" +\r\n        \"raise|return|try|while|with|yield|async|await|nonlocal\");\r\n    var builtinConstants = (\"True|False|None|NotImplemented|Ellipsis|__debug__\");\r\n    var builtinFunctions = (\"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" +\r\n        \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" +\r\n        \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" +\r\n        \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" +\r\n        \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" +\r\n        \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" +\r\n        \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" +\r\n        \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" +\r\n        \"ascii|breakpoint|bytes\");\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"invalid.deprecated\": \"debugger\",\r\n        \"support.function\": builtinFunctions,\r\n        \"variable.language\": \"self|cls\",\r\n        \"constant.language\": builtinConstants,\r\n        \"keyword\": keywords\r\n    }, \"identifier\");\r\n    var strPre = \"[uU]?\";\r\n    var strRawPre = \"[rR]\";\r\n    var strFormatPre = \"[fF]\";\r\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\r\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\r\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\r\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\r\n    var binInteger = \"(?:0[bB][01]+)\";\r\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\r\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\r\n    var fraction = \"(?:\\\\.\\\\d+)\";\r\n    var intPart = \"(?:\\\\d+)\";\r\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\r\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\r\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\r\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\r\n    this.$rules = {\r\n        \"start\": [{\r\n                token: \"comment\",\r\n                regex: \"#.*$\"\r\n            }, {\r\n                token: \"string\", // multi line \"\"\" string start\r\n                regex: strPre + '\"{3}',\r\n                next: \"qqstring3\"\r\n            }, {\r\n                token: \"string\", // \" string\r\n                regex: strPre + '\"(?=.)',\r\n                next: \"qqstring\"\r\n            }, {\r\n                token: \"string\", // multi line ''' string start\r\n                regex: strPre + \"'{3}\",\r\n                next: \"qstring3\"\r\n            }, {\r\n                token: \"string\", // ' string\r\n                regex: strPre + \"'(?=.)\",\r\n                next: \"qstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strRawPre + '\"{3}',\r\n                next: \"rawqqstring3\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strRawPre + '\"(?=.)',\r\n                next: \"rawqqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strRawPre + \"'{3}\",\r\n                next: \"rawqstring3\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strRawPre + \"'(?=.)\",\r\n                next: \"rawqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strFormatPre + '\"{3}',\r\n                next: \"fqqstring3\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strFormatPre + '\"(?=.)',\r\n                next: \"fqqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strFormatPre + \"'{3}\",\r\n                next: \"fqstring3\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strFormatPre + \"'(?=.)\",\r\n                next: \"fqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strRawFormatPre + '\"{3}',\r\n                next: \"rfqqstring3\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strRawFormatPre + '\"(?=.)',\r\n                next: \"rfqqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strRawFormatPre + \"'{3}\",\r\n                next: \"rfqstring3\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: strRawFormatPre + \"'(?=.)\",\r\n                next: \"rfqstring\"\r\n            }, {\r\n                token: \"keyword.operator\",\r\n                regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\r\n            }, {\r\n                token: \"punctuation\",\r\n                regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"[\\\\[\\\\(\\\\{]\"\r\n            }, {\r\n                token: \"paren.rparen\",\r\n                regex: \"[\\\\]\\\\)\\\\}]\"\r\n            }, {\r\n                token: [\"keyword\", \"text\", \"entity.name.function\"],\r\n                regex: \"(def|class)(\\\\s+)([\\\\u00BF-\\\\u1FFF\\\\u2C00-\\\\uD7FF\\\\w]+)\"\r\n            }, {\r\n                token: \"text\",\r\n                regex: \"\\\\s+\"\r\n            }, {\r\n                include: \"constants\"\r\n            }],\r\n        \"qqstring3\": [{\r\n                token: \"constant.language.escape\",\r\n                regex: stringEscape\r\n            }, {\r\n                token: \"string\", // multi line \"\"\" string end\r\n                regex: '\"{3}',\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"qstring3\": [{\r\n                token: \"constant.language.escape\",\r\n                regex: stringEscape\r\n            }, {\r\n                token: \"string\", // multi line ''' string end\r\n                regex: \"'{3}\",\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"qqstring\": [{\r\n                token: \"constant.language.escape\",\r\n                regex: stringEscape\r\n            }, {\r\n                token: \"string\",\r\n                regex: \"\\\\\\\\$\",\r\n                next: \"qqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: '\"|$',\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"qstring\": [{\r\n                token: \"constant.language.escape\",\r\n                regex: stringEscape\r\n            }, {\r\n                token: \"string\",\r\n                regex: \"\\\\\\\\$\",\r\n                next: \"qstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: \"'|$\",\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"rawqqstring3\": [{\r\n                token: \"string\", // multi line \"\"\" string end\r\n                regex: '\"{3}',\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"rawqstring3\": [{\r\n                token: \"string\", // multi line ''' string end\r\n                regex: \"'{3}\",\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"rawqqstring\": [{\r\n                token: \"string\",\r\n                regex: \"\\\\\\\\$\",\r\n                next: \"rawqqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: '\"|$',\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"rawqstring\": [{\r\n                token: \"string\",\r\n                regex: \"\\\\\\\\$\",\r\n                next: \"rawqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: \"'|$\",\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"fqqstring3\": [{\r\n                token: \"constant.language.escape\",\r\n                regex: stringEscape\r\n            }, {\r\n                token: \"string\", // multi line \"\"\" string end\r\n                regex: '\"{3}',\r\n                next: \"start\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"{\",\r\n                push: \"fqstringParRules\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"fqstring3\": [{\r\n                token: \"constant.language.escape\",\r\n                regex: stringEscape\r\n            }, {\r\n                token: \"string\", // multi line ''' string end\r\n                regex: \"'{3}\",\r\n                next: \"start\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"{\",\r\n                push: \"fqstringParRules\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"fqqstring\": [{\r\n                token: \"constant.language.escape\",\r\n                regex: stringEscape\r\n            }, {\r\n                token: \"string\",\r\n                regex: \"\\\\\\\\$\",\r\n                next: \"fqqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: '\"|$',\r\n                next: \"start\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"{\",\r\n                push: \"fqstringParRules\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"fqstring\": [{\r\n                token: \"constant.language.escape\",\r\n                regex: stringEscape\r\n            }, {\r\n                token: \"string\",\r\n                regex: \"'|$\",\r\n                next: \"start\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"{\",\r\n                push: \"fqstringParRules\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"rfqqstring3\": [{\r\n                token: \"string\", // multi line \"\"\" string end\r\n                regex: '\"{3}',\r\n                next: \"start\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"{\",\r\n                push: \"fqstringParRules\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"rfqstring3\": [{\r\n                token: \"string\", // multi line ''' string end\r\n                regex: \"'{3}\",\r\n                next: \"start\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"{\",\r\n                push: \"fqstringParRules\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"rfqqstring\": [{\r\n                token: \"string\",\r\n                regex: \"\\\\\\\\$\",\r\n                next: \"rfqqstring\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: '\"|$',\r\n                next: \"start\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"{\",\r\n                push: \"fqstringParRules\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"rfqstring\": [{\r\n                token: \"string\",\r\n                regex: \"'|$\",\r\n                next: \"start\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"{\",\r\n                push: \"fqstringParRules\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }],\r\n        \"fqstringParRules\": [{\r\n                token: \"paren.lparen\",\r\n                regex: \"[\\\\[\\\\(]\"\r\n            }, {\r\n                token: \"paren.rparen\",\r\n                regex: \"[\\\\]\\\\)]\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: \"\\\\s+\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: \"'[^']*'\"\r\n            }, {\r\n                token: \"string\",\r\n                regex: '\"[^\"]*\"'\r\n            }, {\r\n                token: \"function.support\",\r\n                regex: \"(!s|!r|!a)\"\r\n            }, {\r\n                include: \"constants\"\r\n            }, {\r\n                token: 'paren.rparen',\r\n                regex: \"}\",\r\n                next: 'pop'\r\n            }, {\r\n                token: 'paren.lparen',\r\n                regex: \"{\",\r\n                push: \"fqstringParRules\"\r\n            }],\r\n        \"constants\": [{\r\n                token: \"constant.numeric\", // imaginary\r\n                regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\r\n            }, {\r\n                token: \"constant.numeric\", // float\r\n                regex: floatNumber\r\n            }, {\r\n                token: \"constant.numeric\", // long integer\r\n                regex: integer + \"[lL]\\\\b\"\r\n            }, {\r\n                token: \"constant.numeric\", // integer\r\n                regex: integer + \"\\\\b\"\r\n            }, {\r\n                token: [\"punctuation\", \"function.support\"], // method\r\n                regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\r\n            }, {\r\n                token: keywordMapper,\r\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n            }]\r\n    };\r\n    this.normalizeRules();\r\n};\r\noop.inherits(PythonHighlightRules, TextHighlightRules);\r\nexports.PythonHighlightRules = PythonHighlightRules;\r\n\r\n});\r\n\r\nace.define(\"ace/mode/folding/pythonic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\r\nvar oop = require(\"../../lib/oop\");\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar FoldMode = exports.FoldMode = function (markers) {\r\n    this.foldingStartMarker = new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\" + markers + \")(?:\\\\s*)(?:#.*)?$\");\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n(function () {\r\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n        var match = line.match(this.foldingStartMarker);\r\n        if (match) {\r\n            if (match[1])\r\n                return this.openingBracketBlock(session, match[1], row, match.index);\r\n            if (match[2])\r\n                return this.indentationBlock(session, row, match.index + match[2].length);\r\n            return this.indentationBlock(session, row);\r\n        }\r\n    };\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/python\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/python_highlight_rules\",\"ace/mode/folding/pythonic\",\"ace/range\"], function(require, exports, module){\"use strict\";\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\r\nvar PythonFoldMode = require(\"./folding/pythonic\").FoldMode;\r\nvar Range = require(\"../range\").Range;\r\nvar Mode = function () {\r\n    this.HighlightRules = PythonHighlightRules;\r\n    this.foldingRules = new PythonFoldMode(\"\\\\:\");\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n(function () {\r\n    this.lineCommentStart = \"#\";\r\n    this.$pairQuotesAfter = {\r\n        \"'\": /[ruf]/i,\r\n        '\"': /[ruf]/i\r\n    };\r\n    this.getNextLineIndent = function (state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n        return indent;\r\n    };\r\n    var outdents = {\r\n        \"pass\": 1,\r\n        \"return\": 1,\r\n        \"raise\": 1,\r\n        \"break\": 1,\r\n        \"continue\": 1\r\n    };\r\n    this.checkOutdent = function (state, line, input) {\r\n        if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\")\r\n            return false;\r\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\r\n        if (!tokens)\r\n            return false;\r\n        do {\r\n            var last = tokens.pop();\r\n        } while (last && (last.type == \"comment\" || (last.type == \"text\" && last.value.match(/^\\s+$/))));\r\n        if (!last)\r\n            return false;\r\n        return (last.type == \"keyword\" && outdents[last.value]);\r\n    };\r\n    this.autoOutdent = function (state, doc, row) {\r\n        row += 1;\r\n        var indent = this.$getIndent(doc.getLine(row));\r\n        var tab = doc.getTabString();\r\n        if (indent.slice(-tab.length) == tab)\r\n            doc.remove(new Range(row, indent.length - tab.length, row, indent.length));\r\n    };\r\n    this.$id = \"ace/mode/python\";\r\n    this.snippetFileId = \"ace/snippets/python\";\r\n}).call(Mode.prototype);\r\nexports.Mode = Mode;\r\n\r\n});                (function() {\r\n                    ace.require([\"ace/mode/python\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
