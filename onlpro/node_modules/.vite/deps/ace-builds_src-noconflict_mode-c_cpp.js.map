{
  "version": 3,
  "sources": ["../../ace-builds/src-noconflict/mode-c_cpp.js"],
  "sourcesContent": ["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar DocCommentHighlightRules = function () {\r\n    this.$rules = {\r\n        \"start\": [\r\n            {\r\n                token: \"comment.doc.tag\",\r\n                regex: \"@\\\\w+(?=\\\\s|$)\"\r\n            }, DocCommentHighlightRules.getTagRule(), {\r\n                defaultToken: \"comment.doc.body\",\r\n                caseInsensitive: true\r\n            }\r\n        ]\r\n    };\r\n};\r\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\r\nDocCommentHighlightRules.getTagRule = function (start) {\r\n    return {\r\n        token: \"comment.doc.tag.storage.type\",\r\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\r\n    };\r\n};\r\nDocCommentHighlightRules.getStartRule = function (start) {\r\n    return {\r\n        token: \"comment.doc\", // doc comment\r\n        regex: /\\/\\*\\*(?!\\/)/,\r\n        next: start\r\n    };\r\n};\r\nDocCommentHighlightRules.getEndRule = function (start) {\r\n    return {\r\n        token: \"comment.doc\", // closing comment\r\n        regex: \"\\\\*\\\\/\",\r\n        next: start\r\n    };\r\n};\r\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\r\n\r\n});\r\n\r\nace.define(\"ace/mode/c_cpp_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\r\nvar oop = require(\"../lib/oop\");\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar cFunctions = exports.cFunctions = \"hypot|hypotf|hypotl|sscanf|system|snprintf|scanf|scalbn|scalbnf|scalbnl|scalbln|scalblnf|scalblnl|sin|sinh|sinhf|sinhl|sinf|sinl|signal|signbit|strstr|strspn|strncpy|strncat|strncmp|strcspn|strchr|strcoll|strcpy|strcat|strcmp|strtoimax|strtod|strtoul|strtoull|strtoumax|strtok|strtof|strtol|strtold|strtoll|strerror|strpbrk|strftime|strlen|strrchr|strxfrm|sprintf|setjmp|setvbuf|setlocale|setbuf|sqrt|sqrtf|sqrtl|swscanf|swprintf|srand|nearbyint|nearbyintf|nearbyintl|nexttoward|nexttowardf|nexttowardl|nextafter|nextafterf|nextafterl|nan|nanf|nanl|csin|csinh|csinhf|csinhl|csinf|csinl|csqrt|csqrtf|csqrtl|ccos|ccosh|ccoshf|ccosf|ccosl|cimag|cimagf|cimagl|ctime|ctan|ctanh|ctanhf|ctanhl|ctanf|ctanl|cos|cosh|coshf|coshl|cosf|cosl|conj|conjf|conjl|copysign|copysignf|copysignl|cpow|cpowf|cpowl|cproj|cprojf|cprojl|ceil|ceilf|ceill|cexp|cexpf|cexpl|clock|clog|clogf|clogl|clearerr|casin|casinh|casinhf|casinhl|casinf|casinl|cacos|cacosh|cacoshf|cacoshl|cacosf|cacosl|catan|catanh|catanhf|catanhl|catanf|catanl|calloc|carg|cargf|cargl|cabs|cabsf|cabsl|creal|crealf|creall|cbrt|cbrtf|cbrtl|time|toupper|tolower|tan|tanh|tanhf|tanhl|tanf|tanl|trunc|truncf|truncl|tgamma|tgammaf|tgammal|tmpnam|tmpfile|isspace|isnormal|isnan|iscntrl|isinf|isdigit|isunordered|isupper|ispunct|isprint|isfinite|iswspace|iswcntrl|iswctype|iswdigit|iswupper|iswpunct|iswprint|iswlower|iswalnum|iswalpha|iswgraph|iswxdigit|iswblank|islower|isless|islessequal|islessgreater|isalnum|isalpha|isgreater|isgreaterequal|isgraph|isxdigit|isblank|ilogb|ilogbf|ilogbl|imaxdiv|imaxabs|div|difftime|_Exit|ungetc|ungetwc|pow|powf|powl|puts|putc|putchar|putwc|putwchar|perror|printf|erf|erfc|erfcf|erfcl|erff|erfl|exit|exp|exp2|exp2f|exp2l|expf|expl|expm1|expm1f|expm1l|vsscanf|vsnprintf|vscanf|vsprintf|vswscanf|vswprintf|vprintf|vfscanf|vfprintf|vfwscanf|vfwprintf|vwscanf|vwprintf|va_start|va_copy|va_end|va_arg|qsort|fscanf|fsetpos|fseek|fclose|ftell|fopen|fdim|fdimf|fdiml|fpclassify|fputs|fputc|fputws|fputwc|fprintf|feholdexcept|fesetenv|fesetexceptflag|fesetround|feclearexcept|fetestexcept|feof|feupdateenv|feraiseexcept|ferror|fegetenv|fegetexceptflag|fegetround|fflush|fwscanf|fwide|fwprintf|fwrite|floor|floorf|floorl|fabs|fabsf|fabsl|fgets|fgetc|fgetpos|fgetws|fgetwc|freopen|free|fread|frexp|frexpf|frexpl|fmin|fminf|fminl|fmod|fmodf|fmodl|fma|fmaf|fmal|fmax|fmaxf|fmaxl|ldiv|ldexp|ldexpf|ldexpl|longjmp|localtime|localeconv|log|log1p|log1pf|log1pl|log10|log10f|log10l|log2|log2f|log2l|logf|logl|logb|logbf|logbl|labs|lldiv|llabs|llrint|llrintf|llrintl|llround|llroundf|llroundl|lrint|lrintf|lrintl|lround|lroundf|lroundl|lgamma|lgammaf|lgammal|wscanf|wcsstr|wcsspn|wcsncpy|wcsncat|wcsncmp|wcscspn|wcschr|wcscoll|wcscpy|wcscat|wcscmp|wcstoimax|wcstod|wcstoul|wcstoull|wcstoumax|wcstok|wcstof|wcstol|wcstold|wcstoll|wcstombs|wcspbrk|wcsftime|wcslen|wcsrchr|wcsrtombs|wcsxfrm|wctob|wctomb|wcrtomb|wprintf|wmemset|wmemchr|wmemcpy|wmemcmp|wmemmove|assert|asctime|asin|asinh|asinhf|asinhl|asinf|asinl|acos|acosh|acoshf|acoshl|acosf|acosl|atoi|atof|atol|atoll|atexit|atan|atanh|atanhf|atanhl|atan2|atan2f|atan2l|atanf|atanl|abs|abort|gets|getc|getchar|getenv|getwc|getwchar|gmtime|rint|rintf|rintl|round|roundf|roundl|rename|realloc|rewind|remove|remquo|remquof|remquol|remainder|remainderf|remainderl|rand|raise|bsearch|btowc|modf|modff|modfl|memset|memchr|memcpy|memcmp|memmove|mktime|malloc|mbsinit|mbstowcs|mbsrtowcs|mbtowc|mblen|mbrtowc|mbrlen\";\r\nvar c_cppHighlightRules = function (extraKeywords) {\r\n    var keywordControls = (\"break|case|continue|default|do|else|for|goto|if|_Pragma|\" +\r\n        \"return|switch|while|catch|operator|try|throw|using\");\r\n    var storageType = (\"asm|__asm__|auto|bool|_Bool|char|_Complex|double|enum|float|\" +\r\n        \"_Imaginary|int|int8_t|int16_t|int32_t|int64_t|long|short|signed|size_t|struct|typedef|uint8_t|uint16_t|uint32_t|uint64_t|union|unsigned|void|\" +\r\n        \"class|wchar_t|template|char16_t|char32_t\");\r\n    var storageModifiers = (\"const|extern|register|restrict|static|volatile|inline|private|\" +\r\n        \"protected|public|friend|explicit|virtual|export|mutable|typename|\" +\r\n        \"constexpr|new|delete|alignas|alignof|decltype|noexcept|thread_local\");\r\n    var keywordOperators = (\"and|and_eq|bitand|bitor|compl|not|not_eq|or|or_eq|typeid|xor|xor_eq|\" +\r\n        \"const_cast|dynamic_cast|reinterpret_cast|static_cast|sizeof|namespace\");\r\n    var builtinConstants = (\"NULL|true|false|TRUE|FALSE|nullptr\");\r\n    var keywordMapper = this.$keywords = this.createKeywordMapper(Object.assign({\r\n        \"keyword.control\": keywordControls,\r\n        \"storage.type\": storageType,\r\n        \"storage.modifier\": storageModifiers,\r\n        \"keyword.operator\": keywordOperators,\r\n        \"variable.language\": \"this\",\r\n        \"constant.language\": builtinConstants,\r\n        \"support.function.C99.c\": cFunctions\r\n    }, extraKeywords), \"identifier\");\r\n    var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\\\\b\";\r\n    var escapeRe = /\\\\(?:['\"?\\\\abfnrtv]|[0-7]{1,3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}U[a-fA-F\\d]{8}|.)/.source;\r\n    var formatRe = \"%\"\r\n        + /(\\d+\\$)?/.source // field (argument #)\r\n        + /[#0\\- +']*/.source // flags\r\n        + /[,;:_]?/.source // separator character (AltiVec)\r\n        + /((-?\\d+)|\\*(-?\\d+\\$)?)?/.source // minimum field width\r\n        + /(\\.((-?\\d+)|\\*(-?\\d+\\$)?)?)?/.source // precision\r\n        + /(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)?/.source // length modifier\r\n        + /(\\[[^\"\\]]+\\]|[diouxXDOUeEfFgGaACcSspn%])/.source; // conversion type\r\n    this.$rules = {\r\n        \"start\": [\r\n            {\r\n                token: \"comment\",\r\n                regex: \"//$\",\r\n                next: \"start\"\r\n            }, {\r\n                token: \"comment\",\r\n                regex: \"//\",\r\n                next: \"singleLineComment\"\r\n            },\r\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n            {\r\n                token: \"comment\", // multi line comment\r\n                regex: \"\\\\/\\\\*\",\r\n                next: \"comment\"\r\n            }, {\r\n                token: \"string\", // character\r\n                regex: \"'(?:\" + escapeRe + \"|.)?'\"\r\n            }, {\r\n                token: \"string.start\",\r\n                regex: '\"',\r\n                stateName: \"qqstring\",\r\n                next: [\r\n                    { token: \"string\", regex: /\\\\\\s*$/, next: \"qqstring\" },\r\n                    { token: \"constant.language.escape\", regex: escapeRe },\r\n                    { token: \"constant.language.escape\", regex: formatRe },\r\n                    { token: \"string.end\", regex: '\"|$', next: \"start\" },\r\n                    { defaultToken: \"string\" }\r\n                ]\r\n            }, {\r\n                token: \"string.start\",\r\n                regex: 'R\"\\\\(',\r\n                stateName: \"rawString\",\r\n                next: [\r\n                    { token: \"string.end\", regex: '\\\\)\"', next: \"start\" },\r\n                    { defaultToken: \"string\" }\r\n                ]\r\n            }, {\r\n                token: \"constant.numeric\", // hex\r\n                regex: \"0[xX][0-9a-fA-F]+(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\r\n            }, {\r\n                token: \"constant.numeric\", // float\r\n                regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\r\n            }, {\r\n                token: \"keyword\", // pre-compiler directives\r\n                regex: \"#\\\\s*(?:include|import|pragma|line|define|undef)\\\\b\",\r\n                next: \"directive\"\r\n            }, {\r\n                token: \"keyword\", // special case pre-compiler directive\r\n                regex: \"#\\\\s*(?:endif|if|ifdef|else|elif|ifndef)\\\\b\"\r\n            }, {\r\n                token: keywordMapper,\r\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\"\r\n            }, {\r\n                token: \"keyword.operator\",\r\n                regex: /--|\\+\\+|<<=|>>=|>>>=|<>|&&|\\|\\||\\?:|[*%\\/+\\-&\\^|~!<>=]=?/\r\n            }, {\r\n                token: \"punctuation.operator\",\r\n                regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\r\n            }, {\r\n                token: \"paren.lparen\",\r\n                regex: \"[[({]\"\r\n            }, {\r\n                token: \"paren.rparen\",\r\n                regex: \"[\\\\])}]\"\r\n            }, {\r\n                token: \"text\",\r\n                regex: \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"comment\": [\r\n            {\r\n                token: \"comment\", // closing comment\r\n                regex: \"\\\\*\\\\/\",\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"comment\"\r\n            }\r\n        ],\r\n        \"singleLineComment\": [\r\n            {\r\n                token: \"comment\",\r\n                regex: /\\\\$/,\r\n                next: \"singleLineComment\"\r\n            }, {\r\n                token: \"comment\",\r\n                regex: /$/,\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"comment\"\r\n            }\r\n        ],\r\n        \"directive\": [\r\n            {\r\n                token: \"constant.other.multiline\",\r\n                regex: /\\\\/\r\n            },\r\n            {\r\n                token: \"constant.other.multiline\",\r\n                regex: /.*\\\\/\r\n            },\r\n            {\r\n                token: \"constant.other\",\r\n                regex: \"\\\\s*<.+?>\",\r\n                next: \"start\"\r\n            },\r\n            {\r\n                token: \"constant.other\", // single line\r\n                regex: '\\\\s*[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]',\r\n                next: \"start\"\r\n            },\r\n            {\r\n                token: \"constant.other\", // single line\r\n                regex: \"\\\\s*['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\",\r\n                next: \"start\"\r\n            },\r\n            {\r\n                token: \"constant.other\",\r\n                regex: /[^\\\\\\/]+/,\r\n                next: \"start\"\r\n            }\r\n        ]\r\n    };\r\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\r\n    this.normalizeRules();\r\n};\r\noop.inherits(c_cppHighlightRules, TextHighlightRules);\r\nexports.c_cppHighlightRules = c_cppHighlightRules;\r\n\r\n});\r\n\r\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\r\nvar Range = require(\"../range\").Range;\r\nvar MatchingBraceOutdent = function () { };\r\n(function () {\r\n    this.checkOutdent = function (line, input) {\r\n        if (!/^\\s+$/.test(line))\r\n            return false;\r\n        return /^\\s*\\}/.test(input);\r\n    };\r\n    this.autoOutdent = function (doc, row) {\r\n        var line = doc.getLine(row);\r\n        var match = line.match(/^(\\s*\\})/);\r\n        if (!match)\r\n            return 0;\r\n        var column = match[1].length;\r\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\r\n        if (!openBracePos || openBracePos.row == row)\r\n            return 0;\r\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\r\n        doc.replace(new Range(row, 0, row, column - 1), indent);\r\n    };\r\n    this.$getIndent = function (line) {\r\n        return line.match(/^\\s*/)[0];\r\n    };\r\n}).call(MatchingBraceOutdent.prototype);\r\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\r\n\r\n});\r\n\r\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar FoldMode = exports.FoldMode = function (commentRegex) {\r\n    if (commentRegex) {\r\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\r\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\r\n    }\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n(function () {\r\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\r\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\r\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\r\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\r\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\r\n    this._getFoldWidgetBase = this.getFoldWidget;\r\n    this.getFoldWidget = function (session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n        if (this.singleLineBlockCommentRe.test(line)) {\r\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\r\n                return \"\";\r\n        }\r\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\r\n        if (!fw && this.startRegionRe.test(line))\r\n            return \"start\"; // lineCommentRegionStart\r\n        return fw;\r\n    };\r\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\r\n        var line = session.getLine(row);\r\n        if (this.startRegionRe.test(line))\r\n            return this.getCommentRegionBlock(session, line, row);\r\n        var match = line.match(this.foldingStartMarker);\r\n        if (match) {\r\n            var i = match.index;\r\n            if (match[1])\r\n                return this.openingBracketBlock(session, match[1], row, i);\r\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\r\n            if (range && !range.isMultiLine()) {\r\n                if (forceMultiline) {\r\n                    range = this.getSectionRange(session, row);\r\n                }\r\n                else if (foldStyle != \"all\")\r\n                    range = null;\r\n            }\r\n            return range;\r\n        }\r\n        if (foldStyle === \"markbegin\")\r\n            return;\r\n        var match = line.match(this.foldingStopMarker);\r\n        if (match) {\r\n            var i = match.index + match[0].length;\r\n            if (match[1])\r\n                return this.closingBracketBlock(session, match[1], row, i);\r\n            return session.getCommentFoldRange(row, i, -1);\r\n        }\r\n    };\r\n    this.getSectionRange = function (session, row) {\r\n        var line = session.getLine(row);\r\n        var startIndent = line.search(/\\S/);\r\n        var startRow = row;\r\n        var startColumn = line.length;\r\n        row = row + 1;\r\n        var endRow = row;\r\n        var maxRow = session.getLength();\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var indent = line.search(/\\S/);\r\n            if (indent === -1)\r\n                continue;\r\n            if (startIndent > indent)\r\n                break;\r\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\r\n            if (subRange) {\r\n                if (subRange.start.row <= startRow) {\r\n                    break;\r\n                }\r\n                else if (subRange.isMultiLine()) {\r\n                    row = subRange.end.row;\r\n                }\r\n                else if (startIndent == indent) {\r\n                    break;\r\n                }\r\n            }\r\n            endRow = row;\r\n        }\r\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\r\n    };\r\n    this.getCommentRegionBlock = function (session, line, row) {\r\n        var startColumn = line.search(/\\s*$/);\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\r\n        var depth = 1;\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var m = re.exec(line);\r\n            if (!m)\r\n                continue;\r\n            if (m[1])\r\n                depth--;\r\n            else\r\n                depth++;\r\n            if (!depth)\r\n                break;\r\n        }\r\n        var endRow = row;\r\n        if (endRow > startRow) {\r\n            return new Range(startRow, startColumn, endRow, line.length);\r\n        }\r\n    };\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/c_cpp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/c_cpp_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar c_cppHighlightRules = require(\"./c_cpp_highlight_rules\").c_cppHighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\nvar Mode = function () {\r\n    this.HighlightRules = c_cppHighlightRules;\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n    this.foldingRules = new CStyleFoldMode();\r\n};\r\noop.inherits(Mode, TextMode);\r\n(function () {\r\n    this.lineCommentStart = \"//\";\r\n    this.blockComment = { start: \"/*\", end: \"*/\" };\r\n    this.getNextLineIndent = function (state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n        var endState = tokenizedLine.state;\r\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n        else if (state == \"doc-start\") {\r\n            if (endState == \"start\") {\r\n                return \"\";\r\n            }\r\n            var match = line.match(/^\\s*(\\/?)\\*/);\r\n            if (match) {\r\n                if (match[1]) {\r\n                    indent += \" \";\r\n                }\r\n                indent += \"* \";\r\n            }\r\n        }\r\n        return indent;\r\n    };\r\n    this.checkOutdent = function (state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n    this.autoOutdent = function (state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n    this.$id = \"ace/mode/c_cpp\";\r\n    this.snippetFileId = \"ace/snippets/c_cpp\";\r\n}).call(Mode.prototype);\r\nexports.Mode = Mode;\r\n\r\n});                (function() {\r\n                    ace.require([\"ace/mode/c_cpp\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "],
  "mappings": "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",
  "names": ["require", "exports", "module"]
}
